plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE' // same as Maven's <dependencyManagement> tags
    // version, scope, exclusions can be declared in parent POM
    id 'java'
    id "org.sonarqube" version "2.8"
    id 'com.github.ben-manes.versions' version '0.27.0' // allows to run ./gradlew dependencyUpdates
    id "io.freefair.lombok" version "4.1.6"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.11'
project.buildDir = 'target' // so it uses the same as Maven (otherwise it uses 'build' by default)

sourceSets {
    test {
        java {
            srcDirs = ["src/test/java", "src/main/java"]
            // because we are planning to use a single folder for both main and test
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'org.mockito:mockito-core'
}

test {
    useJUnitPlatform() // alternatives: useJunit() (version 4) or useTestNG()
}